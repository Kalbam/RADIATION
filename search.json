[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)",
    "section": "",
    "text": "Keyla Vanessa Alba Molina\nDoctorado en Ciencias Naturales\nUniversidad del Norte",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)</span>"
    ]
  },
  {
    "objectID": "chapters/EDA_Lineamientos.html",
    "href": "chapters/EDA_Lineamientos.html",
    "title": "2  Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)",
    "section": "",
    "text": "2.1 Introducción",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>**Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)**</span>"
    ]
  },
  {
    "objectID": "chapters/EDA_Lineamientos.html#introducción",
    "href": "chapters/EDA_Lineamientos.html#introducción",
    "title": "2  Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)",
    "section": "",
    "text": "Los sistemas eléctricos constituyen pilares fundamentales para el desarrollo económico y social de cualquier nación, ya que permiten el acceso a servicios esenciales, impulsan la productividad y favorecen la equidad territorial \\cite{bisaga2021mapping, garces2021lessons}. En este contexto, la transición hacia fuentes de energía renovable ha cobrado una relevancia creciente, posicionando a la energía solar como una alternativa estratégica gracias a su disponibilidad, sostenibilidad y reducción de costos. \n\n  \nA medida que su implementación se vuelve más accesible en términos tecnológicos y económicos, la precisión en la predicción de la radiación solar emerge como un insumo clave para maximizar la eficiencia y viabilidad de los sistemas fotovoltaicos . Contar con estimaciones fiables no solo mejora la planificación energética, sino que también permite una mejor gestión de la oferta y la demanda, especialmente en territorios con alta irradiación y bajos niveles de electrificación.\n\n\n&lt;img src=\"https://cdn-icons-png.flaticon.com/512/3301/3301609.png\" alt=\"Sistema Eléctrico\" width=\"2000\"&gt;\n\n\n\n\nEn el caso particular de Brasil, la energía solar representa una fuente abundante, limpia y con un potencial significativo de aprovechamiento. El impulso a investigaciones aplicadas en este campo no solo favorece la diversificación de la matriz energética nacional, sino que también contribuye a reducir la dependencia de los combustibles fósiles, avanzar hacia una transición energética justa y fortalecer la seguridad energética del país.\nAdemás, Brasil se distingue por su extensión territorial y diversidad climática, lo que ha consolidado su compromiso con la sostenibilidad y la transición energética. Históricamente, la energía hidroeléctrica ha constituido la columna vertebral de su matriz energética, representando aproximadamente entre el 60 % y el 65 % de la generación total de electricidad. No obstante, en los últimos años, el país ha experimentado un crecimiento significativo en la adopción de fuentes como la energía solar y eólica, consolidando su liderazgo en el aprovechamiento de energías limpias .\n\n\n&lt;img src=\"https://cdn-icons-png.flaticon.com/512/10028/10028994.png\" alt=\"Brasil\" width=\"2000\"&gt;",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>**Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)**</span>"
    ]
  },
  {
    "objectID": "chapters/EDA_Lineamientos.html#contexto",
    "href": "chapters/EDA_Lineamientos.html#contexto",
    "title": "2  Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)",
    "section": "2.2 Contexto",
    "text": "2.2 Contexto\nEl noreste de Brasil, una región históricamente marcada por desafíos socioeconómicos y pobreza energética, ha emergido como un epicentro estratégico para la generación de energía solar. Esta región presenta algunos de los índices más altos de irradiación solar a nivel mundial (ver figura 1). El mapa de Irradiación Normal Directa promedio a largo plazo en Brasil, que cubre el periodo de 1999 a 2018, ofrece un análisis detallado de la distribución espacial de la radiación solar en el país, destacando al noreste como una de las zonas con mayor potencial para el aprovechamiento de esta fuente renovable.\nA continuación, los estados del noreste de Brasil y sus respectivas capitales:\n\n\n\nEstado\nCiudad\n\n\n\n\nAlagoas\nMaceió\n\n\nBahia\nSalvador\n\n\nCeará\nFortaleza\n\n\nMaranhão\nSão Luís\n\n\nParaíba\nJoão Pessoa\n\n\nPernambuco\nRecife\n\n\nPiauí\nTeresina\n\n\nRio Grande do Norte\nNatal\n\n\nSergipe\nAracaju\n\n\n\nAdemás, factores como la intensidad de los vientos y los altos niveles de evaporación, evidenciados en diversos estudios, refuerzan el potencial fotovoltaico de esta región.\n\n\n&lt;img src=\"figures/Mapa_Br_Rad.png\" alt=\"Mapa Rad\" width=\"100%\"&gt;\n&lt;p style=\"font-size: 90%;\"&gt;&lt;strong&gt;Figura 1.&lt;/strong&gt; Mapa de Irradiación Solar&lt;/p&gt;\n\n\n&lt;img src=\"figures/Mapa_Br_PHV.png\" alt=\"Mapa FV\" width=\"100%\"&gt;\n&lt;p style=\"font-size: 90%;\"&gt;&lt;strong&gt;Figura 2.&lt;/strong&gt; Mapa de Potencial Fotovoltaico&lt;/p&gt;\n\n\nLa figura 2 revela la capacidad de generación fotovoltaica en todo el territorio brasileño, subrayando particularmente el noreste. Por otro lado, se presentan los totales diarios y anuales promedio de producción de una planta conectada a la red con un potencial pico de \\(1;kW\\), calculados a partir de un periodo reciente de 20 años (1999–2018).\n\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport pandas as pd\nimport json\nfrom plotly.subplots import make_subplots\n\nwith open(\"brazil-states.geojson\", \"r\", encoding=\"utf-8\") as f:\n    geojson_brasil = json.load(f)\n\nestados_nordeste = [\n    'Alagoas', 'Bahia', 'Ceará', 'Maranhão', 'Paraíba',\n    'Pernambuco', 'Piauí', 'Rio Grande do Norte', 'Sergipe'\n]\n\ndf_estados = pd.DataFrame({\n    'Estado': [feature['properties']['name'] for feature in geojson_brasil['features']],\n    'Região': ['Nordeste' if feature['properties']['name'] in estados_nordeste else 'Outros'\n               for feature in geojson_brasil['features']]\n})\n\ndf_destacado = pd.DataFrame({\n    'Estado': [feature['properties']['name'] for feature in geojson_brasil['features'] if feature['properties']['name'] in estados_nordeste],\n    'Grupo': ['Paraíba' if feature['properties']['name'] == 'Paraíba' else 'Outro Nordeste'\n              for feature in geojson_brasil['features'] if feature['properties']['name'] in estados_nordeste]\n})\n\ncapitais = pd.DataFrame({\n    'Cidade': ['Maceió', 'Salvador', 'Fortaleza', 'São Luís', 'João Pessoa',\n               'Recife', 'Teresina', 'Natal', 'Aracaju'],\n    'Lat': [-9.6658, -12.9714, -3.7319, -2.5307, -7.1153,\n            -8.0476, -5.0892, -5.7945, -10.9472],\n    'Lon': [-35.7350, -38.5014, -38.5267, -44.3028, -34.8631,\n            -34.8770, -42.8016, -35.2110, -37.0731]\n})\n\n\nfig1 = px.choropleth(\n    df_estados,\n    geojson=geojson_brasil,\n    locations=\"Estado\",\n    featureidkey=\"properties.name\",\n    color=\"Região\",\n    color_discrete_map={'Nordeste': 'salmon', 'Outros': 'lightgray'},\n    labels={'Região': 'Região'}\n)\n\n\nfig2 = px.choropleth(\n    df_destacado,\n    geojson=geojson_brasil,\n    locations=\"Estado\",\n    featureidkey=\"properties.name\",\n    color=\"Grupo\",\n    color_discrete_map={'Paraíba': 'orange', 'Outro Nordeste': 'salmon'},\n    labels={'Grupo': 'Grupo'}\n)\n\nfig2.add_trace(go.Scattergeo(\n    lon=capitais[\"Lon\"],\n    lat=capitais[\"Lat\"],\n    text=capitais[\"Cidade\"],\n    mode='markers+text',\n    marker=dict(size=12, symbol='triangle-up', color='black'),\n    textposition=\"top center\",\n    name='Cidade'\n))\n\nfig_combined = make_subplots(\n    rows=1, cols=2,\n    subplot_titles=(\"Brasil com Região Nordeste\", \"Capitais do Nordeste\"),\n    specs=[[{\"type\": \"choropleth\"}, {\"type\": \"choropleth\"}]]\n)\n\nfor trace in fig1.data:\n    fig_combined.add_trace(trace, row=1, col=1)\nfor trace in fig2.data:\n    fig_combined.add_trace(trace, row=1, col=2)\n\nfig_combined.update_layout(\n    height=700,\n    width=1300,\n    showlegend=True,\n    font=dict(family=\"Arial\", size=16),\n\n    geo=dict(  \n        projection_type='mercator',\n        center={\"lat\": -14.5, \"lon\": -52},\n        fitbounds=\"locations\",\n        visible=False\n    ),\n\n    geo2=dict(  \n        projection_type='mercator',\n        center={\"lat\": -9, \"lon\": -38.5},\n        lonaxis=dict(range=[-50, -30]),\n        lataxis=dict(range=[-20, 5]),\n        visible=False\n    )\n)\n\nfig_combined.show()\n\n                            \n                                            \n\n\nEstas condiciones convierten al noreste en una región clave tanto a nivel nacional como internacional para el desarrollo de proyectos de energía solar y eólica .\nEn este contexto, resulta particularmente relevante el caso del estado de Paraíba, el cual ha sido recientemente caracterizado como una de las regiones con mayor índice de irradiación solar en Brasil, según evidencia empírica obtenida a partir de modelos físicos y satelitales de alta resolución . Este hallazgo no solo ratifica el potencial energético de la región, sino que también fundamenta la selección de Paraíba como unidad geográfica de análisis para la presente investigación.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>**Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)**</span>"
    ]
  },
  {
    "objectID": "chapters/EDA_Lineamientos.html#antecedentes",
    "href": "chapters/EDA_Lineamientos.html#antecedentes",
    "title": "2  Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)",
    "section": "2.3 Antecedentes",
    "text": "2.3 Antecedentes\n\n\n\n\n\n\n\n&lt;div style=\"background: #f0f8ff; padding: 15px; height: 140px; border-left: 5px solid #003366; border-radius: 8px;\"&gt;\n  &lt;strong&gt;2015&lt;/strong&gt;&lt;br&gt;\n  Olatomiwa et al.&lt;br&gt;\n  &lt;em&gt;SVM + Firefly para&lt;br&gt;predicción de radiación solar.&lt;/em&gt;\n&lt;/div&gt;\n&lt;div style=\"width: 14px; height: 14px; background: #003366; border-radius: 50%; margin: 10px auto;\"&gt;&lt;/div&gt;\n\n\n\n&lt;div style=\"background: #f0f8ff; padding: 15px; height: 140px; border-left: 5px solid #003366; border-radius: 8px;\"&gt;\n  &lt;strong&gt;2016&lt;/strong&gt;&lt;br&gt;\n  Wang et al.&lt;br&gt;\n  &lt;em&gt;Comparación de modelos&lt;br&gt;híbridos para radiación solar.&lt;/em&gt;\n&lt;/div&gt;\n&lt;div style=\"width: 14px; height: 14px; background: #003366; border-radius: 50%; margin: 10px auto;\"&gt;&lt;/div&gt;\n\n\n\n&lt;div style=\"background: #f0f8ff; padding: 15px; height: 140px; border-left: 5px solid #003366; border-radius: 8px;\"&gt;\n  &lt;strong&gt;2017&lt;/strong&gt;&lt;br&gt;\n  Voyant et al.&lt;br&gt;\n  &lt;em&gt;Revisión de técnicas de&lt;br&gt;Machine Learning para radiación.&lt;/em&gt;\n&lt;/div&gt;\n&lt;div style=\"width: 14px; height: 14px; background: #003366; border-radius: 50%; margin: 10px auto;\"&gt;&lt;/div&gt;\n\n\n\n&lt;div style=\"background: #f0f8ff; padding: 15px; height: 140px; border-left: 5px solid #003366; border-radius: 8px;\"&gt;\n  &lt;strong&gt;2018&lt;/strong&gt;&lt;br&gt;\n  Sobri et al.&lt;br&gt;\n  &lt;em&gt;Revisión de métodos de&lt;br&gt;predicción fotovoltaica.&lt;/em&gt;\n&lt;/div&gt;\n&lt;div style=\"width: 14px; height: 14px; background: #003366; border-radius: 50%; margin: 10px auto;\"&gt;&lt;/div&gt;\n\n\n\n&lt;div style=\"background: #f0f8ff; padding: 15px; height: 140px; border-left: 5px solid #003366; border-radius: 8px;\"&gt;\n  &lt;strong&gt;2019&lt;/strong&gt;&lt;br&gt;\n  Benali et al.&lt;br&gt;\n  &lt;em&gt;Predicción solar con ANN y&lt;br&gt;Random Forest.&lt;/em&gt;\n&lt;/div&gt;\n&lt;div style=\"width: 14px; height: 14px; background: #003366; border-radius: 50%; margin: 10px auto;\"&gt;&lt;/div&gt;\n\n\n\n\n\n\n\n\n\n&lt;div style=\"background: #f0f8ff; padding: 15px; height: 140px; border-left: 5px solid #003366; border-radius: 8px;\"&gt;\n  &lt;strong&gt;2020&lt;/strong&gt;&lt;br&gt;\n  Gao et al.&lt;br&gt;\n  &lt;em&gt;Predicción horaria con&lt;br&gt;CEEMDAN + CNN-LSTM.&lt;/em&gt;\n&lt;/div&gt;\n&lt;div style=\"width: 14px; height: 14px; background: #003366; border-radius: 50%; margin: 10px auto;\"&gt;&lt;/div&gt;\n\n\n\n&lt;div style=\"background: #f0f8ff; padding: 15px; height: 140px; border-left: 5px solid #003366; border-radius: 8px;\"&gt;\n  &lt;strong&gt;2021&lt;/strong&gt;&lt;br&gt;\n  Kumari et al.&lt;br&gt;\n  &lt;em&gt;Modelo híbrido LSTM-CNN&lt;br&gt;para irradiancia solar.&lt;/em&gt;\n&lt;/div&gt;\n&lt;div style=\"width: 14px; height: 14px; background: #003366; border-radius: 50%; margin: 10px auto;\"&gt;&lt;/div&gt;\n\n\n\n&lt;div style=\"background: #f0f8ff; padding: 15px; height: 140px; border-left: 5px solid #003366; border-radius: 8px;\"&gt;\n  &lt;strong&gt;2022&lt;/strong&gt;&lt;br&gt;\n  Wei et al.&lt;br&gt;\n  &lt;em&gt;Mapeo espaciotemporal con&lt;br&gt;contaminación como variable.&lt;/em&gt;\n&lt;/div&gt;\n&lt;div style=\"width: 14px; height: 14px; background: #003366; border-radius: 50%; margin: 10px auto;\"&gt;&lt;/div&gt;\n\n\n\n&lt;div style=\"background: #f0f8ff; padding: 15px; height: 140px; border-left: 5px solid #003366; border-radius: 8px;\"&gt;\n  &lt;strong&gt;2023&lt;/strong&gt;&lt;br&gt;\n  Gaboitaolelwe et al.&lt;br&gt;\n  &lt;em&gt;Comparación de modelos de&lt;br&gt;ML para energía fotovoltaica.&lt;/em&gt;\n&lt;/div&gt;\n&lt;div style=\"width: 14px; height: 14px; background: #003366; border-radius: 50%; margin: 10px auto;\"&gt;&lt;/div&gt;\n\n\n\n&lt;div style=\"background: #f0f8ff; padding: 15px; height: 140px; border-left: 5px solid #003366; border-radius: 8px;\"&gt;\n  &lt;strong&gt;2024&lt;/strong&gt;&lt;br&gt;\n  Gao et al.&lt;br&gt;\n  &lt;em&gt;Transfer learning con ADDA&lt;br&gt;para predicción solar.&lt;/em&gt;\n&lt;/div&gt;\n&lt;div style=\"width: 14px; height: 14px; background: #003366; border-radius: 50%; margin: 10px auto;\"&gt;&lt;/div&gt;",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>**Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)**</span>"
    ]
  },
  {
    "objectID": "chapters/EDA_Lineamientos.html#planteamiento-del-problema",
    "href": "chapters/EDA_Lineamientos.html#planteamiento-del-problema",
    "title": "2  Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)",
    "section": "2.4 Planteamiento del problema",
    "text": "2.4 Planteamiento del problema\nActualmente, la matriz energética mundial depende principalmente del uso de combustibles fósiles, los cuales son finitos y contaminantes . Esta situación ha intensificado la búsqueda de alternativas sostenibles como la energía solar, considerada una fuente limpia, inagotable y accesible . Brasil lidera esta transición en América Latina: en 2023, el 83.79 % de su matriz eléctrica provenía de fuentes renovables, destacándose la participación de la energía hidroeléctrica, eólica y solar . Como se muestra en la Figura \\(\\ref{Matriz_Br}\\), existe una alta densidad de proyectos fotovoltaicos planificados en la región noreste del país.\n\n\n\nFigura 3. Mapa general de distribución geográfica de la matriz energética y de proyectos planificados en Brasil. Se observa una alta densidad de planes fotovoltaicos en la región noreste. Fuente: Global Solar Atlas / Datos energéticos.\n\n\nA pesar de este panorama, el potencial solar en regiones con alta irradiación como el noreste brasileño sigue subutilizado, debido a barreras estructurales e institucionales . Esta situación demanda el desarrollo de modelos predictivos más precisos para estimar la radiación solar, superando las limitaciones de los enfoques empíricos y físicos tradicionales .\nTécnicas de Machine Learning han demostrado mejores resultados, especialmente bajo esquemas híbridos que integran transformadas, modelos estadísticos y redes neuronales . Sin embargo, no se han identificado estudios que implementen un modelo híbrido DWT–ARIMA–BO–ANN en el estado de Paraíba, a pesar de su alto potencial fotovoltaico y sus necesidades energéticas particulares.\nFrente a este panorama, el presente estudio propone utilizar técnicas de imputación de datos faltantes basadas en métodos estadísticos . Además, se presenta una metodología híbrida basada en descomposición por medio de que combina un modelo de series de tiempo, y otro de , surgiendo\n\nla pregunta de investigación:\n¿Es el modelo híbrido propuesto (DWT–ARIMA–BO–ANN) óptimo y para predecir la radiación solar en el estado de Paraíba?",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>**Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)**</span>"
    ]
  },
  {
    "objectID": "chapters/EDA_Lineamientos.html#objetivos",
    "href": "chapters/EDA_Lineamientos.html#objetivos",
    "title": "2  Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)",
    "section": "2.5 Objetivos",
    "text": "2.5 Objetivos\n\n2.5.1 Objetivo general\nPredecir la radiación solar en el estado de Paraíba, de Brasil, mediante el uso de técnicas híbridas basadas en la Transformada Wavelet Discreta (DWT), el Modelo Autorregresivo Integrado de Media Móvil (ARIMA) y Redes Neuronales Artificiales (ANN) con Optimización Bayesiana (BO), como herramienta de apoyo para la planificación de proyectos solares.\n\n\n2.5.2 Objetivos específicos\n\nRealizar un Análisis Exploratorio de Datos (EDA) de bases asociadas a radiación solar en Paraíba para identificar patrones importantes en las series temporales, evaluando estacionariedad, datos faltantes y la distribución de la variable estudiada.\nPredecir señales de baja y alta frecuencia derivadas de la Transformada Wavelet Discreta (DWT) mediante un enfoque híbrido que combine modelos ARIMA para señales de baja frecuencia y ANN para las de alta frecuencia optimizado con BO (BO-ANN), respectivamente.\nPronosticar la radiación solar integrando las señales de alta y baja frecuencia predichas, evaluando la eficiencia del modelo mediante métricas como: MAPE, MAD, MSD y \\(R^2\\).",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>**Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)**</span>"
    ]
  },
  {
    "objectID": "chapters/EDA_Lineamientos.html#justificación",
    "href": "chapters/EDA_Lineamientos.html#justificación",
    "title": "2  Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)",
    "section": "2.6 Justificación",
    "text": "2.6 Justificación\n\n\n\n Tecnología\n\n\n Ciencia\n\n\n Impacto social\n\n\n Impacto ambiental\n\n\n\nLa presente investigación es importante porque representa un aporte significativo en cuatro dimensiones clave: científica, tecnológica, social y ambiental. Desde el enfoque científico, contribuye al avance del conocimiento al proponer un modelo híbrido innovador que combina la Transformada Wavelet Discreta (DWT), el modelo ARIMA, la Optimización Bayesiana (BO) y Redes Neuronales Artificiales (ANN), permitiendo abordar de manera precisa series temporales no lineales, con ruido e irregularidad como las de radiación solar. En el plano tecnológico, esta propuesta responde a la necesidad de contar con herramientas predictivas robustas y adaptables a territorios con limitada infraestructura de monitoreo, como el estado de Paraíba, optimizando así la planificación de sistemas fotovoltaicos más eficientes y confiables. Desde una perspectiva social, el estudio apoya la toma de decisiones informadas para reducir la brecha energética en comunidades vulnerables, promoviendo el acceso a energías limpias, económicas y sostenibles, al tiempo que fortalece la formación de capacidades locales en ciencia de datos y transición energética. Finalmente, el impacto ambiental se refleja en el impulso a una matriz energética más limpia, con menor dependencia de fuentes fósiles, reducción de emisiones contaminantes, conservación de recursos naturales y mejora de la calidad ambiental en regiones donde el aprovechamiento del recurso solar puede traducirse en beneficios tangibles para el territorio y su población.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>**Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)**</span>"
    ]
  },
  {
    "objectID": "chapters/EDA_Lineamientos.html#marco-legal",
    "href": "chapters/EDA_Lineamientos.html#marco-legal",
    "title": "2  Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)",
    "section": "2.7 Marco Legal",
    "text": "2.7 Marco Legal\n\n\n\n&lt;img src=\"https://cdn-icons-png.flaticon.com/512/2206/2206461.png\" alt=\"Internacional\" width=\"250\"&gt;\n&lt;h3 style=\"margin-top: 10px;\"&gt;Nivel internacional&lt;/h3&gt;\n&lt;ul style=\"font-size: 16px; text-align: justify; padding: 0 15px;\"&gt;\n  &lt;li&gt;&lt;strong&gt;Agencia Internacional de Energías Renovables (IRENA):&lt;/strong&gt; Promueve la adopción de energías renovables a nivel global, impulsando el desarrollo de marcos regulatorios, estándares técnicos y cooperación entre países.&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Programa de las Naciones Unidas para el Medio Ambiente (PNUMA):&lt;/strong&gt; Fomenta políticas energéticas sostenibles e impulsa programas en países en desarrollo para acelerar la transición hacia fuentes renovables como la solar.&lt;/li&gt;\n&lt;/ul&gt;\n\n\n\n&lt;img src=\"https://cdn-icons-png.flaticon.com/512/10028/10028994.png\" alt=\"Brasil\" width=\"250\"&gt;\n&lt;h3 style=\"margin-top: 10px;\"&gt;Nivel nacional – Brasil&lt;/h3&gt;\n&lt;ul style=\"font-size: 16px; text-align: justify; padding: 0 15px;\"&gt;\n  &lt;li&gt;&lt;strong&gt;Ley N.º 14.300/2022 (Marco legal de la generación distribuida):&lt;/strong&gt; Establece reglas para consumidores que generan su propia energía renovable. Incluye beneficios fiscales y exención de tarifas hasta 2045.&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Resolución Normativa ANEEL N.º 482/2012:&lt;/strong&gt; Regula el sistema de &lt;em&gt;net metering&lt;/em&gt;, permitiendo a usuarios inyectar excedentes a la red y recibir créditos.&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;PROINFA:&lt;/strong&gt; Promueve la diversificación energética con inclusión de fuentes como solar, eólica y biomasa.&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;RenovaBio:&lt;/strong&gt; Aunque enfocado en biocombustibles, refuerza la sostenibilidad mediante metas de reducción de emisiones y fomento a fuentes limpias.&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Plan Decenal de Expansión Energética (PDE) 2031:&lt;/strong&gt; Proyecta un 83% de participación de fuentes renovables, con incremento relevante de la solar.&lt;/li&gt;\n&lt;/ul&gt;\n\n\n\n\n\n&lt;div style=\"text-align: center;\"&gt;\n  &lt;img src=\"figures/Norest_Brasil.png\" alt=\"Mapa Nordeste\" width=\"70%\"&gt;\n  &lt;h3 style=\"margin-top: 10px;\"&gt;Nivel regional – Estados del noreste de Brasil&lt;/h3&gt;\n&lt;/div&gt;\n&lt;p&gt;\n  Varios estados del noreste brasileño han adoptado políticas públicas específicas que complementan las leyes nacionales y promueven activamente la energía solar:\n&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li&gt;&lt;strong&gt;Programa Bahia Solar:&lt;/strong&gt; Subsidios y créditos fiscales para fomentar instalaciones fotovoltaicas.&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Programa de Incentivo a Energias Renováveis:&lt;/strong&gt; Beneficios fiscales y soporte técnico a quienes desarrollen proyectos solares.&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Incentivos Fiscais para Energias Renováveis:&lt;/strong&gt; Exenciones impositivas que facilitan la adopción de sistemas de energía solar.&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Política Estadual de Energias Renováveis:&lt;/strong&gt; Establece directrices e incentivos para la investigación, desarrollo e implementación de sistemas solares en el estado.&lt;/li&gt;\n&lt;/ul&gt;\n\n\n\n&lt;div style=\"text-align: center;\"&gt;\n  &lt;img src=\"figures/Paraiba_Brasil.png\" alt=\"Mapa Paraíba\" width=\"63%\"&gt;\n  &lt;h3 style=\"margin-top: 10px;\"&gt;Nivel regional/local – Estado de Paraíba&lt;/h3&gt;\n&lt;/div&gt;\n&lt;p&gt;\n  El estado de Paraíba ha desarrollado un marco normativo propio que refuerza el compromiso con el desarrollo sostenible y la promoción de la energía solar:\n&lt;/p&gt;\n&lt;ul&gt;\n  &lt;li&gt;&lt;strong&gt;Ley N.º 10.720/2016:&lt;/strong&gt; Instituye la &lt;em&gt;Política Estadual de Incentivo a la Generación y Aprovechamiento de Energía Solar y Eólica&lt;/em&gt;.&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Proyectos de Ley (en discusión):&lt;/strong&gt; Proponen nuevas políticas para incentivar la generación fotovoltaica, ampliar beneficios fiscales y promover empleo.&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Programa Empreender Solar – Governo da Paraíba:&lt;/strong&gt; Línea de crédito estatal (R$ 15.000 a R$ 150.000, tasa 0.64%, hasta 60 meses).&lt;/li&gt;\n  &lt;li&gt;&lt;strong&gt;Otros incentivos locales:&lt;/strong&gt; Isención de ICMS para compra de equipos solares y beneficios fiscales vía Prodes/PB.&lt;/li&gt;\n&lt;/ul&gt;\n\n\n\n\n\nEste marco normativo integral crea condiciones favorables para el desarrollo de proyectos de energía solar en el estado de Paraíba, respaldando técnica, fiscal y legalmente la investigación aquí propuesta.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>**Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)**</span>"
    ]
  },
  {
    "objectID": "chapters/EDA_Lineamientos.html#marco-teórico",
    "href": "chapters/EDA_Lineamientos.html#marco-teórico",
    "title": "2  Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)",
    "section": "2.8 Marco Teórico",
    "text": "2.8 Marco Teórico\n\n2.8.1 Modelo Autorregresivo Integrado de Media Móvil ()\nLos Modelos de Media Móvil Integrada Autorregresiva , iniciados por Box y Jenkins , son técnicas de pronóstico poderosas y útiles para predecir series de tiempo . Fundamentalmente, los modelos ARIMA se utilizan para pronosticar valores futuros de una serie temporal mediante la aplicación de una combinación ponderada de información histórica y residuos. Este modelo se caracteriza por estar compuesto por tres componentes clave: el grado de diferenciación estacional requerido, los órdenes de autorregresión y media móvil .\nEl operador de desplazamiento hacia atrás, \\(B\\), es introducido para remover la no estacionariedad. Una serie de tiempo \\(y_{t}\\) es homogénea no estacionaria si su primera diferencia, \\(w_{t} = y_{t} - y_{t-1} = (1 - B)y_{t}\\), o la \\(d\\)-ésima diferencia, \\(w_{t} = (1 - B)^{d}y_{t}\\), produce una serie temporal estacionaria. Además, \\(y_t\\) se conoce como el modelo de promedio móvil integrado autorregresivo con órdenes \\(p\\), \\(d\\), y \\(q\\), y se denota \\((p, d, q)\\). Si su \\(d\\)-ésima diferencia produce estacionariedad, se procede a un modelo \\((p, q)\\). Por lo tanto, un \\((p, d, q)\\) puede ser descrito como:\n\\[\n\\Phi(B)(1-B)^d y_t = \\delta + \\Theta(B)\\varepsilon_t\n\\]\nDonde:\n\\[\n\\Phi(B) = 1 - \\sum_{i=1}^{p} \\phi_i B^i \\quad \\text{y} \\quad \\Theta(B) = 1 - \\sum_{i=1}^{q} \\theta_i B^i\n\\]\nLos operadores de desplazamiento para AR\\((p)\\) y MA\\((q)\\) son definidos como:\n\\[\n\\Phi(B)y_t = \\delta + \\varepsilon_t \\quad \\text{y} \\quad y_t = \\mu + \\Theta(B)\\varepsilon_t,\n\\]\ncon \\(\\delta = \\mu - \\phi \\mu\\), donde \\(\\mu\\) es la media y \\(\\varepsilon_t\\) el ruido blanco con \\(E(\\varepsilon_t) = 0\\).\nLos órdenes \\(p\\), \\(q\\) del modelo se pueden determinar empleando las estructuras de autocorrelación y autocorrelación parcial. Los coeficientes se calculan mediante el enfoque de máxima verosimilitud iniciado por Box y Jenkins . A partir de comprobaciones evaluativas como el criterio de información de Akaike (AIC) y la prueba de normalidad de Jarque-Bera para series residuales, se identifican los modelos óptimos.\nA continuación, se presentan algunos estudios relacionados a la radiación solar mediante el modelo :\n\nEn la capital de la India, se pronosticó la insolación mensual promedio en un área de 18.904 millas cuadradas utilizando un histórico de 34 años de datos de insolación de .\nEn las capitales de Jordania y Polonia, cuyos niveles de irradiancia horizontal global () diario promedio difieren en más del doble, se identificaron modelos adecuados para ambas ubicaciones, y se estimaron los parámetros para intervalos de tiempo horarios y mensuales de radiación .\nEn la ciudad de Seúl, Corea del Sur, se aplicó el modelo usando 37 años de datos como conjunto de entrenamiento y prueba para pronosticar radiación solar promedio mensual con un retraso estacional de naturaleza cíclica .\nEn la ciudad de Tetuán, se realizó una comparación entre modelos y para modelar la radiación solar bajo condiciones climáticas similares. En tres períodos consecutivos, el modelo resultó óptimo en términos de bondad de ajuste para pronosticar la radiación solar global diaria media mensual .\nFinalmente, un estudio mediante el enfoque de Box-Jenkins simuló los datos de insolación promedio mensual del conjunto para un período de 34 años en la Universidad Jamia Millia Islamia, Nueva Delhi. La serie fue evaluada con distintos criterios de selección, concluyendo que el modelo multiplicativo estacional puede emplearse eficazmente para pronosticar la radiación solar .\n\n\n\n2.8.2 La Transformada Wavelet Discreta \nLa transformada Wavelet introducida por es una técnica que descompone una señal en diferentes escalas temporales. Al descomponer una serie en un espacio de tiempo-frecuencia, se pueden determinar los modos dominantes de variabilidad en el tiempo . Definida como un conjunto de funciones de base que pueden generarse mediante la traslación y escalado de la denominada ondícula madre \\(\\psi_{a,b}\\) :\n\\[\n\\psi_{a,b} = \\frac{1}{\\sqrt{a}}\\psi \\left ( \\frac{t-a}{a} \\right ), \\quad a &gt; 0, \\; -\\infty &lt; b &lt; \\infty\n\\]\nDonde \\(a\\) es el parámetro de escala y \\(b\\) es la ubicación de la ondícula. Cabe mencionar que existe una diversidad de enfoques de Transformadas para las cuales se pueden utilizar diferentes ondículas madre. Sin embargo, en el contexto de investigación, el enfoque se centrará específicamente en la Transformada Wavelet Discreta .\nUna Transformada Wavelet Discreta es un conjunto de pequeñas funciones discretas para representar escalas y desplazamientos en la señal original. Aunque la se encuentra diseñada para el análisis de muestras, es importante destacar que esta transformación realiza una descomposición de la señal en un conjunto multiortogonal de wavelets.\nLa emplea una cuadrícula díadica, en la cual la wavelet madre experimenta una variación de escala mediante un factor de dos elevado a la potencia de \\(a = 2^{j}\\), y se desplaza a lo largo de números enteros \\(b = k 2^{j}\\), donde \\(k\\) representa un índice de ubicación que varía en el rango de \\(1\\) a \\(2^{-j} N\\) (siendo \\(N\\) el número total de observaciones). El parámetro \\(j\\) varía desde \\(0\\) hasta \\(J\\) (donde \\(J\\) corresponde al número total de escalas). La se define por medio de la siguiente ecuación:\n\\[\n\\Psi_{j,k}(t)= 2^{-j/2}\\Psi (2^{-j}t - k)\n\\]\ndonde los coeficientes se calculan según la siguiente expresión:\n\\[\nW_{j,k} = W(2^{j}, k2^{j}) = 2^{-j/2} \\int_{-\\infty}^{\\infty} f(t) \\Psi(2^{-j}t - k) dt\n\\]\nA continuación, se efectúa el cálculo de la media de la transformada wavelet discreta inversa con el propósito de restaurar la señal original a partir de los coeficientes wavelet \\(W_{j,k}\\), de la siguiente forma:\n\\[\nf(t) = \\sum_{j=-\\infty}^{\\infty} \\sum_{k=-\\infty}^{\\infty} W_{j,k} \\Psi_{j,k}(t)\n\\]\nLa Transformada Wavelet Discreta (DWT) utiliza una variedad de ondículas madre, tales como: la ondícula Haar, Daubechies, ortogonal, Symlet, Meyer y Coiflets, entre otras .\nEn este estudio, se propone el uso de ondículas madre Daubechies en la fase inicial del procesamiento de datos, empleando el Análisis Multi-Resolución con descomposición en múltiples niveles utilizando filtros de paso bajo y paso alto . Esto genera componentes de detalle \\((D_{n})\\) y aproximación \\((A_{n})\\) a partir de una serie temporal \\((y_{t})\\).\nEl análisis Wavelet se está convirtiendo en una herramienta potente en las ciencias para analizar variaciones localizadas en una serie temporal . Al emplear en predicción de radiación, puede proporcionar un enfoque eficaz para el análisis de series temporales .",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>**Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)**</span>"
    ]
  },
  {
    "objectID": "chapters/EDA_Lineamientos.html#la-optimización-bayesiana",
    "href": "chapters/EDA_Lineamientos.html#la-optimización-bayesiana",
    "title": "2  Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)",
    "section": "2.9 La Optimización Bayesiana ",
    "text": "2.9 La Optimización Bayesiana \nLa optimización bayesiana representa una estrategia consolidada y eficaz para abordar la optimización global en el contexto de funciones caja negra, caracterizadas por su inherente ruido y alta complejidad computacional .\nLa se basa en la construcción de modelos probabilísticos que caracterizan la distribución de funciones objetivo en el espacio de entrada . Dicho enfoque implica la incorporación de una prioridad funcional y la observación de pares de entrada-objetivo, denotados como \\(D = \\{(x_{n}, y_{n})\\}\\), donde \\(n\\) varía de 1 a \\(N\\). Esta estrategia eficiente permite obtener una función probabilística, computacionalmente más accesible, que facilita la identificación del óptimo de una función costosa.\nPara cuantificar los nuevos experimentos, se recurre a una función de adquisición, cuya aplicación sobre la media y la varianza de la distribución posterior posibilita un equilibrio ponderado entre la exploración y explotación de las regiones del espacio de búsqueda. La ejecución de la optimización bayesiana se lleva a cabo a través de una optimización indirecta de esta función de adquisición, determinando de este modo la siguiente entrada a ser evaluada.\nLa trata de resolver el problema de minimización:\n\\[\nx^{*}=  \\underset{x \\in \\mathcal{X}}{\\mathrm{argmin}} \\: f(x),\n\\]\ndonde se toma \\(\\mathcal{X}\\) como un subconjunto compacto de \\(\\mathbb{R}^{k}\\).\nPara los hiperparámetros del modelo sustitutivo \\(\\Theta\\), la varianza marginal predictiva se define como \\(\\sigma^{2}(x; \\Theta)\\) y la media predictiva como \\(\\mu (x; \\mathcal{D}, \\Theta)\\). Se define entonces:\n\\[\n\\gamma (x) = \\frac{f(x_{\\text{best}}) - \\mu (x; \\mathcal{D}, \\Theta)}{\\sigma (x; \\mathcal{D}, \\Theta)}\n\\]\ndonde \\(f(x_{\\text{best}})\\) es el valor observado más bajo. El criterio de mejora esperada se define como:\n\\[\na_{EI}(x,\\mathcal{D}, \\Theta) = \\sigma (x; \\mathcal{D}, \\Theta) \\left[ \\gamma (x) \\Phi (\\gamma (x)) + \\mathcal{N}( \\gamma (x); 0, 1) \\right]\n\\]\nAquí, \\(\\Phi(\\cdot)\\) representa la función de distribución acumulativa de una normal estándar, y \\(\\mathcal{N}(\\cdot; 0, 1)\\) es la densidad de una normal estándar .\nLa optimización bayesiana es un pilar esencial para la obtención de resultados óptimos en investigaciones científicas, dado que aporta arquitecturas novedosas de aprendizaje profundo .",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>**Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)**</span>"
    ]
  },
  {
    "objectID": "chapters/EDA_Lineamientos.html#modelos-de-redes-neuronales-artificiales",
    "href": "chapters/EDA_Lineamientos.html#modelos-de-redes-neuronales-artificiales",
    "title": "2  Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)",
    "section": "2.10 Modelos de Redes Neuronales Artificiales ",
    "text": "2.10 Modelos de Redes Neuronales Artificiales \nEl aprendizaje profundo permite que los modelos computacionales que se componen de múltiples capas de procesamiento aprendan representaciones de datos con múltiples niveles de abstracción . Las arquitecturas son hoy en día una de las estructuras de red más utilizadas para clasificación y regresión .\nEl modelo es definido como:\n\\[\n\\hat{y} = \\alpha_{0} + \\sum_{j=1}^{N} \\alpha_{j} f_{A}\\left( \\omega_{j}^{T} {y}' \\right)\n\\]\nDonde \\({y}'\\) representa el vector de entrada \\({y}' = (1, y^{T})^{T}\\), \\(\\omega_{j}\\) es el vector de pesos, \\(\\alpha_{0}, \\alpha_{1}, \\dots, \\alpha_{N}\\) son las ponderaciones de salida y \\(\\hat{y}\\) es la salida de la red. La función \\(f_{A}\\) representa la activación del nodo oculto.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>**Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)**</span>"
    ]
  },
  {
    "objectID": "chapters/EDA_Lineamientos.html#metodología",
    "href": "chapters/EDA_Lineamientos.html#metodología",
    "title": "2  Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)",
    "section": "2.11 Metodología",
    "text": "2.11 Metodología\nEn esta investigación el estudio es tratado según su nivel de medición, por lo tanto, es cuantitativo dada la naturaleza de la variable respuesta (radiación). La radiación solar, expresada en unidades de potencia \\((W/m^{2})\\), es recolectada directamente por un sistema de medición que utiliza piranómetros . Además, según su ubicación temporal o la obtención de las observaciones en el tiempo, los datos considerados en el presente estudio son del tipo longitudinal y prospectivo, dado que las observaciones son recolectadas a medida que van sucediendo .\nLa metodología de investigación utilizada en esta propuesta es de tipo aplicada, la cual contiene un conjunto de procedimientos, herramientas y técnicas que se utilizan para diseñar, realizar y analizar estudios de investigación destinados a resolver problemas prácticos en entornos reales. La evaluación de los componentes de la serie de tiempo asociada a radiación solar es útil dentro de sus aplicaciones, debido al comportamiento estacionario de los parámetros de radiación solar y a la variedad de condiciones atmosféricas .\nPara llevar a cabo las predicciones de radiación solar haciendo uso de una metodología híbrida DWT–ARIMA–BO–ANN en los estados del noreste de Brasil, se debe seguir el siguiente esquema metodológico (ver Figura 4). Para ello, se utilizaron registros disponibles en el portal del Instituto Nacional de Meteorología de Brasil (INMET), accesible en: https://portal.inmet.gov.br/dadoshistoricos. Los datos considerados abarcan el período enero de 2019 a febrero de 2025.\n\n\n\nFigura 4. Diagrama del flujo de implementación del modelo híbrido DWT–ARIMA–BO–ANN. Fuente: Elaboración propia.\n\n\n\nPaso 1: Utilizar la base de datos pública de la Administración Nacional de Aeronáutica y el Espacio (NASA), a través del proyecto POWER, que proporciona conjuntos de datos solares y meteorológicos usados por la NASA para apoyar la energía renovable. Los datos históricos parten del 1 de enero de 1981 a la fecha.\nPaso 2: Realizar un análisis exploratorio de los datos suministrados, evaluando y detectando distintos patrones, mediante pruebas como Dickey-Fuller para detectar estacionariedad estocástica, y gráficos de Autocorrelación y Autocorrelación Parcial.\nPaso 3: Descomponer la serie de tiempo de radiación solar en señales de baja y alta frecuencia utilizando DWT. Las señales de baja frecuencia \\(A_n\\) se predicen con el modelo ARIMA, y las señales de alta frecuencia \\(D_n\\) con modelos de Redes Neuronales Artificiales (ANN). Las ANN son optimizadas con Optimización Bayesiana (BO) para mejorar el rendimiento computacional.\nPaso 4: Obtener la predicción final de la radiación solar mediante la suma de predicciones reconstruidas de alta y baja frecuencia, modeladas por ARIMA y BO-ANN respectivamente, tal como se indica en la siguiente ecuación:\n\n\\[\n\\tilde{h}_{t}^{\\textsf{w-ARIMA-BO-ANN}} = \\tilde{A}_{n}^{\\textsf{ARIMA}} + \\tilde{D}_{n}^{\\textsf{BO-ANN}} + \\tilde{D}_{n-1}^{\\textsf{BO-ANN}} + \\cdots + \\tilde{D}_{2}^{\\textsf{BO-ANN}} + \\tilde{D}_{1}^{\\textsf{BO-ANN}}\n\\]\nTambién se realizarán pruebas de normalidad de residuos utilizando el test de Shapiro–Wilk.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>**Predicción de Radiación Solar en los Estados del Noreste de Brasil Utilizando Técnicas Híbridas Basadas en Transformada Wavelet Discreta, ARIMA y Redes Neuronales Artificiales (ANN)**</span>"
    ]
  },
  {
    "objectID": "chapters/EDA.html",
    "href": "chapters/EDA.html",
    "title": "3  ETL",
    "section": "",
    "text": "import os\nfrom pandas.plotting import autocorrelation_plot\nimport warnings\nimport pandas as pd\nimport seaborn as sns\nimport requests\nimport plotly.express as px\nimport matplotlib.pyplot as plt\nimport matplotlib.image as mpimg\nimport plotly.graph_objects as go\nfrom IPython.display import display\nfrom scipy.stats import ks_2samp\n# from TSPackages import *\nfrom scipy.stats import jarque_bera\nfrom scipy.stats import ks_2samp\nfrom scipy.stats import kurtosis, skew\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\nwarnings.filterwarnings('ignore')\nfrom pandas.plotting import autocorrelation_plot\nimport pandas as pd\nimport matplotlib.pyplot as plt\nfrom statsmodels.tsa.seasonal import seasonal_decompose\nimport matplotlib.pyplot as plt\nimport os\n\n\nfile_path = [\n    r\"C:\\Users\\Keyla Alba\\OneDrive - Universidad del Norte\\Doctorado (Ciencias)\\Move La America\\EDA\\Datos\\INMET_CO_MS_A710_PARANAIBA_01-01-2019_A_31-12-2019.CSV\",\n    r\"C:\\Users\\Keyla Alba\\OneDrive - Universidad del Norte\\Doctorado (Ciencias)\\Move La America\\EDA\\Datos\\INMET_CO_MS_A710_PARANAIBA_01-01-2020_A_31-12-2020.CSV\",\n    r\"C:\\Users\\Keyla Alba\\OneDrive - Universidad del Norte\\Doctorado (Ciencias)\\Move La America\\EDA\\Datos\\INMET_CO_MS_A710_PARANAIBA_01-01-2021_A_31-12-2021.CSV\",\n    r\"C:\\Users\\Keyla Alba\\OneDrive - Universidad del Norte\\Doctorado (Ciencias)\\Move La America\\EDA\\Datos\\INMET_CO_MS_A710_PARANAIBA_01-01-2022_A_31-12-2022.CSV\",\n    r\"C:\\Users\\Keyla Alba\\OneDrive - Universidad del Norte\\Doctorado (Ciencias)\\Move La America\\EDA\\Datos\\INMET_CO_MS_A710_PARANAIBA_01-01-2023_A_31-12-2023.CSV\",\n    r\"C:\\Users\\Keyla Alba\\OneDrive - Universidad del Norte\\Doctorado (Ciencias)\\Move La America\\EDA\\Datos\\INMET_CO_MS_A710_PARANAIBA_01-01-2024_A_31-12-2024.CSV\",\n    r\"C:\\Users\\Keyla Alba\\OneDrive - Universidad del Norte\\Doctorado (Ciencias)\\Move La America\\EDA\\Datos\\INMET_CO_MS_A710_PARANAIBA_01-01-2025_A_28-02-2025.CSV\"\n]\n\ndef load_and_clean(file_path):\n    df = pd.read_csv(file_path, sep=';', encoding='latin1', skiprows=8)\n    df.columns = [col.strip().upper() for col in df.columns]\n    for col in df.columns:\n        if \"RADIACAO\" in col and \"KJ\" in col:\n            df.rename(columns={col: \"RADIACAO_GLOBAL\"}, inplace=True)\n            break\n    df['HORA UTC'] = df['HORA UTC'].astype(str).str.replace(' UTC', '', regex=False)\n    df['HORA UTC'] = df['HORA UTC'].str.zfill(4)\n    df['HORA UTC'] = df['HORA UTC'].str[:2] + ':' + df['HORA UTC'].str[2:4]\n    df['datetime'] = pd.to_datetime(df['DATA'] + ' ' + df['HORA UTC'], format='%Y/%m/%d %H:%M', errors='coerce')\n    df['RADIACAO_GLOBAL'] = pd.to_numeric(df['RADIACAO_GLOBAL'], errors='coerce').fillna(0)\n    return df[['datetime', 'RADIACAO_GLOBAL']]\ndf_INMET = pd.concat([load_and_clean(fp) for fp in file_path], ignore_index=True)\nprint(df_INMET.shape)\ndf_INMET.head(n=14)\n\n(54024, 2)\n\n\n\n\n\n\n\n\n\ndatetime\nRADIACAO_GLOBAL\n\n\n\n\n0\n2019-01-01 00:00:00\n0.0\n\n\n1\n2019-01-01 01:00:00\n0.0\n\n\n2\n2019-01-01 02:00:00\n0.0\n\n\n3\n2019-01-01 03:00:00\n0.0\n\n\n4\n2019-01-01 04:00:00\n0.0\n\n\n5\n2019-01-01 05:00:00\n0.0\n\n\n6\n2019-01-01 06:00:00\n0.0\n\n\n7\n2019-01-01 07:00:00\n0.0\n\n\n8\n2019-01-01 08:00:00\n0.0\n\n\n9\n2019-01-01 09:00:00\n0.0\n\n\n10\n2019-01-01 10:00:00\n0.0\n\n\n11\n2019-01-01 11:00:00\n0.0\n\n\n12\n2019-01-01 12:00:00\n0.0\n\n\n13\n2019-01-01 13:00:00\n2434.0\n\n\n\n\n\n\n\n\nfig_INMET = px.line(\n    df_INMET,\n    x='datetime',\n    y='RADIACAO_GLOBAL',\n    title='Radiación Global (KJ/m²) por Hora INMET (2019 a Febrero 2025)',\n    labels={\n        'datetime': 'Fecha y Hora',\n        'RADIACAO_GLOBAL': 'Radiación (KJ/m²)'\n    }\n)\nfig_INMET.update_layout(template='plotly_white', width=1100, height=500)\nfig_INMET.show()\n\n                            \n                                            \n\n\n\n3.0.0.1 Imputación usando promedio estacional\nUno de los retos fundamentales en el análisis de series temporales de radiación solar es la presencia de valores faltantes, especialmente en estaciones meteorológicas con limitaciones técnicas o períodos de inestabilidad climática. Una alternativa eficaz para abordar este problema es la Regla de Imputación Estacional, la cual consiste en reemplazar los datos perdidos utilizando el promedio de los valores registrados en la misma hora y día de otros años o meses, respetando así la estacionalidad y patrones cíclicos propios de la variable. Esta técnica resulta particularmente adecuada para variables como la radiación solar, que presenta una fuerte dependencia temporal y comportamiento periódico. En este contexto, analizaron el rendimiento de métodos univariantes de imputación bajo diferentes condiciones climáticas, concluyendo que las estrategias basadas en estacionalidad ofrecen ventajas significativas en climas tropicales. De manera complementaria, enfatizan que una adecuada imputación mejora sustancialmente la precisión de modelos de predicción basados en aprendizaje automático, al reducir la incertidumbre asociada al preprocesamiento de datos meteorológicos.\nRegla de Imputación Estacional\nSupongamos que tienes una serie de datos:\n\n\\(R_i\\): valor de radiación en la observación \\(i\\)\n\\(d_i\\): día del año de la observación \\(i\\) (de 1 a 366)\n\\(h_i\\): hora del día de la observación \\(i\\) (de 0 a 23)\n\nPara cada observación con valor faltante \\(R_i = 0\\), la imputación es:\n\\[\n\\hat{R}_i = \\frac{1}{n_{d_i,h_i}} \\sum_{j \\in G(d_i,h_i)} R_j\n\\]\nDonde:\n\n\\(\\hat{R}_i\\) es el valor imputado para la observación \\(i\\)\n\\(G(d_i, h_i)\\) es el conjunto de observaciones \\(j\\) donde \\(R_j &gt; 0\\), y el día y la hora coinciden con \\(d_i, h_i\\)\n\\(n_{d_i,h_i}\\) es el número de valores disponibles en ese grupo\n\n\nSi no existen datos en ese grupo:\n\n\\[\n\\hat{R}_i = 0\n\\]\n\ndf_INMET['RADIACAO_GLOBAL_IMPUTADA'] = df_INMET['RADIACAO_GLOBAL'].replace(0, pd.NA)\ndf_INMET['datetime'] = pd.to_datetime(df_INMET['datetime'])\ndf_INMET['dayofyear'] = df_INMET['datetime'].dt.dayofyear\ndf_INMET['hour'] = df_INMET['datetime'].dt.hour\n\ntabla_promedios = df_INMET.groupby(['dayofyear', 'hour'])['RADIACAO_GLOBAL_IMPUTADA'].mean()\ndef imputar_estacional(row):\n    if pd.isna(row['RADIACAO_GLOBAL_IMPUTADA']):\n        return tabla_promedios.get((int(row['dayofyear']), int(row['hour'])), 0)\n    else:\n        return row['RADIACAO_GLOBAL_IMPUTADA']\ndf_INMET['RADIACAO_GLOBAL_IMPUTADA'] = df_INMET.apply(imputar_estacional, axis=1)\ndf_INMET['RADIACAO_GLOBAL_IMPUTADA'] = df_INMET['RADIACAO_GLOBAL_IMPUTADA'].fillna(0)\nprint(df_INMET.shape)\ndf_INMET.tail(20)\n\n(54024, 5)\n\n\n\n\n\n\n\n\n\ndatetime\nRADIACAO_GLOBAL\nRADIACAO_GLOBAL_IMPUTADA\ndayofyear\nhour\n\n\n\n\n54004\n2025-02-28 04:00:00\n0.0\n0.0\n59\n4\n\n\n54005\n2025-02-28 05:00:00\n0.0\n0.0\n59\n5\n\n\n54006\n2025-02-28 06:00:00\n0.0\n0.0\n59\n6\n\n\n54007\n2025-02-28 07:00:00\n0.0\n0.0\n59\n7\n\n\n54008\n2025-02-28 08:00:00\n0.0\n0.0\n59\n8\n\n\n54009\n2025-02-28 09:00:00\n0.0\n0.0\n59\n9\n\n\n54010\n2025-02-28 10:00:00\n0.0\n0.0\n59\n10\n\n\n54011\n2025-02-28 11:00:00\n0.0\n0.0\n59\n11\n\n\n54012\n2025-02-28 12:00:00\n0.0\n1749.0\n59\n12\n\n\n54013\n2025-02-28 13:00:00\n0.0\n0.0\n59\n13\n\n\n54014\n2025-02-28 14:00:00\n0.0\n2989.0\n59\n14\n\n\n54015\n2025-02-28 15:00:00\n0.0\n0.0\n59\n15\n\n\n54016\n2025-02-28 16:00:00\n0.0\n1930.0\n59\n16\n\n\n54017\n2025-02-28 17:00:00\n0.0\n0.0\n59\n17\n\n\n54018\n2025-02-28 18:00:00\n0.0\n3146.0\n59\n18\n\n\n54019\n2025-02-28 19:00:00\n0.0\n0.0\n59\n19\n\n\n54020\n2025-02-28 20:00:00\n0.0\n0.0\n59\n20\n\n\n54021\n2025-02-28 21:00:00\n0.0\n0.0\n59\n21\n\n\n54022\n2025-02-28 22:00:00\n0.0\n97.0\n59\n22\n\n\n54023\n2025-02-28 23:00:00\n0.0\n0.0\n59\n23\n\n\n\n\n\n\n\n\nfig = go.Figure()\nfig.add_trace(go.Scatter(\n    x=df_INMET['datetime'],\n    y=df_INMET['RADIACAO_GLOBAL_IMPUTADA'],\n    mode='lines',\n    name='INMET-IMPUTADA',\n    line=dict(color='orange'),\n    opacity=0.7\n))\nfig.add_trace(go.Scatter(\n    x=df_INMET['datetime'],\n    y=df_INMET['RADIACAO_GLOBAL'],\n    mode='lines',\n    name='INMET-SIN IMPUTAR',\n    line=dict(color='blue'),\n    opacity=0.7\n))\nfig.update_layout(\n    title='Evolución de Radiación INMET - Imputación Promedio Estacional (2019-2025)',\n    xaxis_title='Fecha y Hora',\n    yaxis_title='Radiación (KJ/m²)',\n    legend_title='Fuente',\n    template='plotly_white',\n    height=500,\n    width=1100\n)\nfig.show()\n\n                            \n                                            \n\n\n\nrad_orig = df_INMET['RADIACAO_GLOBAL'][df_INMET['RADIACAO_GLOBAL'] &gt; 0]\nrad_imp = df_INMET['RADIACAO_GLOBAL_IMPUTADA'][df_INMET['RADIACAO_GLOBAL_IMPUTADA'] &gt; 0]\n\nfig, axes = plt.subplots(1, 2, figsize=(16, 5), sharey=True)\n\nsns.histplot(rad_orig, bins=60, kde=True, color='royalblue', ax=axes[0])\naxes[0].set_title('RADIACAO_GLOBAL (&gt; 0)')\naxes[0].set_xlabel('Radiación (KJ/m²)')\naxes[0].set_ylabel('Frecuencia')\naxes[0].grid(True)\n\nsns.histplot(rad_imp, bins=60, kde=True, color='darkorange', ax=axes[1])\naxes[1].set_title('RADIACAO_GLOBAL_IMPUTADA (&gt; 0)')\naxes[1].set_xlabel('Radiación (KJ/m²)')\naxes[1].set_ylabel('')\naxes[1].grid(True)\n\nfig.suptitle('Distribuciones de Radiación Solar INMET (Imputación Promedio Estacional) (&gt; 0) - Antes y Después ', fontsize=16)\nplt.tight_layout()\nplt.show()\n\nrad_orig = df_INMET['RADIACAO_GLOBAL'][df_INMET['RADIACAO_GLOBAL'] &gt; 0]\nrad_imp = df_INMET['RADIACAO_GLOBAL_IMPUTADA'][df_INMET['RADIACAO_GLOBAL_IMPUTADA'] &gt; 0]\nstat_ks, p_ks = ks_2samp(rad_orig, rad_imp)\nprint(\"Kolmogorov-Smirnov Test (Distribución Original vs Imputada):\")\nprint(f\"Estadístico KS: {stat_ks:.4f}\")\nprint(f\"p-valor: {p_ks:.4e}\")\nif p_ks &gt; 0.05:\n    print(\"No se rechaza H0 → Las distribuciones son estadísticamente similares.\")\nelse:\n    print(\"Se rechaza H0 → Las distribuciones son diferentes.\")\n\n\n\n\n\n\n\n\nKolmogorov-Smirnov Test (Distribución Original vs Imputada):\nEstadístico KS: 0.0153\np-valor: 8.3915e-01\nNo se rechaza H0 → Las distribuciones son estadísticamente similares.\n\n\n\n\n3.0.0.2 EDA\nEn el contexto de la predicción de radiación solar mediante modelos de series de tiempo, es fundamental conservar la estructura completa de la serie, incluyendo los valores de radiación nocturna igual a cero. El mantenimiento de esta continuidad temporal asegura que los algoritmos puedan captar correctamente la dinámica estacional y los ciclos diarios, evitando la introducción de sesgos por omisión de periodos sin registros. Este enfoque es especialmente relevante al trabajar con modelos como redes neuronales recurrentes, regresión de soporte vectorial o procesos gaussianos, los cuales requieren secuencias homogéneas y completas para una convergencia adecuada y generalización efectiva .\nAdicionalmente, investigaciones que comparan arquitecturas híbridas de redes neuronales han resaltado que la inclusión de todos los datos horarios incluyendo los correspondientes a la noche contribuye a un entrenamiento más robusto y coherente, permitiendo una mejor adaptación a diferentes contextos geográficos y meteorológicos .\n\n3.0.0.2.1 Horas\n\ndf_INMET.to_csv('df_INMET.csv', index=False)\n\n\ndf_INMET['datetime'] = pd.to_datetime(df_INMET['datetime'])\nfig = px.line(df_INMET, \n              x='datetime', \n              y='RADIACAO_GLOBAL_IMPUTADA',\n              title='Time Series - Global Radiation',\n              labels={'datetime': 'Date', 'RADIACAO_GLOBAL_IMPUTADA': 'Radiation'})\n\nfig.update_layout(\n    xaxis_title='Fecha',\n    yaxis_title='Radiación',\n    template='plotly_white',\n    width=1000,\n    height=500\n)\nfig.show()\n\n                            \n                                            \n\n\n\ndf_INMET['datetime'] = pd.to_datetime(df_INMET['datetime'])\ndf_INMET = df_INMET.set_index('datetime')\nos.makedirs(\"figures\", exist_ok=True)\nplt.figure(figsize=(14, 5))\nplt.plot(df_INMET['RADIACAO_GLOBAL_IMPUTADA'], color='blue')\nplt.title('Time Series - Global Radiation', fontsize=18)\nplt.xlabel('Date', fontsize=14)\nplt.ylabel('Radiation (W/m²)', fontsize=14)\nplt.grid(True)\nplt.tight_layout()\nplt.savefig(\"figures/Global_Radiation_TimeSeries.png\", dpi=300)\nplt.show()\n\n\n\n\n\n\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport os\n\naño_inicio = 2019\nfechas_completas = pd.date_range(start=f\"{año_inicio}-01-01 00:00:00\", periods=len(df_INMET), freq='H')\ndf_INMET['datetime'] = fechas_completas\ndf_INMET = df_INMET.set_index('datetime')\nfig, ax = plt.subplots(figsize=(14, 5))\nax.plot(df_INMET.index, df_INMET['RADIACAO_GLOBAL_IMPUTADA'], color='blue')\nax.set_title('Time Series - Global Radiation', fontsize=18)\nax.set_xlabel('Date', fontsize=14)\nax.set_ylabel('Radiation (W/m²)', fontsize=14)\nax.grid(True)\ninterval_start = pd.Timestamp(\"2020-01-10 00:00:00\")\ninterval_end = pd.Timestamp(\"2020-01-15 00:00:00\")\nzoom_data = df_INMET.loc[interval_start:interval_end]\nax_inset = fig.add_axes([0.6, 0.45, 0.25, 0.4])  # [left, bottom, width, height]\nax_inset.plot(zoom_data.index, zoom_data['RADIACAO_GLOBAL_IMPUTADA'], color='red')\nax_inset.set_title('Zoom: Jan 10–15, 2020', fontsize=10)\nax_inset.grid(True)\nax_inset.set_xticks([])\nax_inset.set_yticks([])\nax_inset.set_xlabel('')\nax_inset.set_ylabel('')\nos.makedirs(\"figures\", exist_ok=True)\nplt.tight_layout()\nplt.savefig(\"figures/Global_Radiation_TimeSeries_Zoom.png\", dpi=300)\nplt.show()\n\n\n\n\n\n\n\n\n\nvariables = ['RADIACAO_GLOBAL_IMPUTADA']\nresumen = {}\nfor var in variables:\n    data = df_INMET[var]  \n    resumen[var] = {\n        'N_records': len(data),\n        'μ': data.mean(),\n        'σ': data.std(),\n        'y_min': data.min(),\n        'Q1': data.quantile(0.25),\n        'x̄': data.median(),\n        'Q3': data.quantile(0.75),\n        'y_max': data.max(),\n        'Kurtosis': data.kurtosis(),\n        'Skewness': data.skew()\n    }\ndf_resumen = pd.DataFrame(resumen)\ndf_resumen\n\n\n\n\n\n\n\n\nRADIACAO_GLOBAL_IMPUTADA\n\n\n\n\nN_records\n54024.000000\n\n\nμ\n284.327790\n\n\nσ\n752.818778\n\n\ny_min\n0.000000\n\n\nQ1\n0.000000\n\n\nx̄\n0.000000\n\n\nQ3\n0.000000\n\n\ny_max\n3924.000000\n\n\nKurtosis\n6.500850\n\n\nSkewness\n2.742065\n\n\n\n\n\n\n\n\nfrom statsmodels.tsa.seasonal import seasonal_decompose\ndescomposicion = seasonal_decompose(df_INMET['RADIACAO_GLOBAL_IMPUTADA'].tail(1000), model='additive', period=24)\ndescomposicion.plot()\nplt.suptitle(\"Decomposition of Global Radiation (Daily Cycle)\", fontsize=16)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\ndesc_por_hora = df_INMET.groupby('hour')['RADIACAO_GLOBAL_IMPUTADA'].describe()\ndesc_por_hora\n\n\n\n\n\n\n\n\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\nhour\n\n\n\n\n\n\n\n\n\n\n\n\n0\n2251.0\n0.021324\n0.291339\n0.0\n0.0\n0.0\n0.0\n4.0\n\n\n1\n2251.0\n0.024434\n0.287252\n0.0\n0.0\n0.0\n0.0\n5.0\n\n\n2\n2251.0\n0.009329\n0.167072\n0.0\n0.0\n0.0\n0.0\n3.0\n\n\n3\n2251.0\n0.032430\n0.292600\n0.0\n0.0\n0.0\n0.0\n4.0\n\n\n4\n2251.0\n0.015549\n0.184338\n0.0\n0.0\n0.0\n0.0\n3.0\n\n\n5\n2251.0\n0.011550\n0.132832\n0.0\n0.0\n0.0\n0.0\n2.0\n\n\n6\n2251.0\n0.000000\n0.000000\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n7\n2251.0\n0.005775\n0.075792\n0.0\n0.0\n0.0\n0.0\n1.0\n\n\n8\n2251.0\n0.000000\n0.000000\n0.0\n0.0\n0.0\n0.0\n0.0\n\n\n9\n2251.0\n0.822301\n4.227157\n0.0\n0.0\n0.0\n0.0\n51.0\n\n\n10\n2251.0\n32.930920\n96.786907\n0.0\n0.0\n0.0\n0.0\n666.0\n\n\n11\n2251.0\n185.690582\n346.654214\n0.0\n0.0\n0.0\n262.0\n1656.0\n\n\n12\n2251.0\n443.797201\n687.757224\n0.0\n0.0\n0.0\n913.0\n2524.0\n\n\n13\n2251.0\n593.693470\n917.315057\n0.0\n0.0\n0.0\n1498.0\n3033.0\n\n\n14\n2251.0\n901.893159\n1242.582789\n0.0\n0.0\n0.0\n2175.0\n3425.0\n\n\n15\n2251.0\n935.042870\n1337.877727\n0.0\n0.0\n0.0\n2449.0\n3793.0\n\n\n16\n2251.0\n1129.770546\n1418.127255\n0.0\n0.0\n0.0\n2611.0\n3924.0\n\n\n17\n2251.0\n834.166148\n1219.894113\n0.0\n0.0\n0.0\n2212.0\n3782.0\n\n\n18\n2251.0\n775.424256\n1051.873855\n0.0\n0.0\n0.0\n1827.0\n3568.0\n\n\n19\n2251.0\n499.856952\n767.244822\n0.0\n0.0\n0.0\n1114.0\n2760.0\n\n\n20\n2251.0\n344.708796\n527.554926\n0.0\n0.0\n0.0\n737.0\n1999.0\n\n\n21\n2251.0\n127.717015\n245.809561\n0.0\n0.0\n0.0\n185.0\n1276.0\n\n\n22\n2251.0\n18.125722\n60.460133\n0.0\n0.0\n0.0\n1.0\n639.0\n\n\n23\n2251.0\n0.106619\n0.705033\n0.0\n0.0\n0.0\n0.0\n9.0\n\n\n\n\n\n\n\n\ndescomposicion = seasonal_decompose(df_INMET['RADIACAO_GLOBAL_IMPUTADA'].tail(1000), model='additive', period=24)\nfig = descomposicion.plot()\nfig.suptitle(\"Decomposition of Global Radiation (Daily Cycle)\", fontsize=16)\nplt.tight_layout()\nfig.savefig('figures/decomposition_global_radiation.png')\nplt.show()\n\n\n\n\n\n\n\n\n\nos.makedirs('figures', exist_ok=True)\nmedia_por_hora = df_INMET.groupby('hour')['RADIACAO_GLOBAL_IMPUTADA'].mean().reset_index()\nplt.figure(figsize=(8, 6))\nsns.lineplot(data=media_por_hora, x='hour', y='RADIACAO_GLOBAL_IMPUTADA', marker='o')\nplt.title('Average Global Radiation by Hour', fontsize=16)\nplt.xlabel('Hour of Day', fontsize=12)\nplt.ylabel('Global Radiation', fontsize=12)\nplt.xticks(range(0, 24))\nplt.grid(True)\nplt.savefig('figures/avg_radiation_by_hour.png')\nplt.show()\n\n\n\n\n\n\n\n\n\nos.makedirs('figures', exist_ok=True)\n\nif 'hour' not in df_INMET.columns:\n    df_INMET['hour'] = df_INMET.index.hour\nfig = px.box(\n    df_INMET,\n    x='hour',\n    y='RADIACAO_GLOBAL_IMPUTADA',\n    labels={\n        'hour': 'Hour of Day',\n        'RADIACAO_GLOBAL_IMPUTADA': 'Global Radiation'\n    },\n    title='Distribution of Global Radiation by Hour of the Day'\n)\n\nfig.update_layout(\n    title_font_size=18,\n    xaxis_title_font_size=14,\n    yaxis_title_font_size=14\n)\nfig.write_html(\"figures/boxplot_radiation_by_hour_plotly.html\")\nfig.show()\n\n                            \n                                            \n\n\n\nos.makedirs('figures', exist_ok=True)\nif 'hour' not in df_INMET.columns:\n    df_INMET['hour'] = df_INMET.index.hour\nplt.figure(figsize=(10, 6))\nsns.boxplot(data=df_INMET, x='hour', y='RADIACAO_GLOBAL_IMPUTADA')\nplt.title('Distribution of Global Radiation by Hour of the Day', fontsize=18)\nplt.xlabel('Hour of Day', fontsize=14)\nplt.ylabel('Global Radiation', fontsize=14)\nplt.grid(True)\nplt.tight_layout()\nplt.savefig('figures/boxplot_radiation_by_hour.png', dpi=300)\nplt.show()\n\n\n\n\n\n\n\n\n\nos.makedirs('figures', exist_ok=True)\nplt.figure(figsize=(5, 4))\nautocorrelation_plot(df_INMET['RADIACAO_GLOBAL_IMPUTADA'].tail(200))\nplt.title(\"Autocorrelation - Global Radiation\", fontsize=14)\nplt.grid(True)\nplt.savefig(\"figures/autocorrelation_global_radiation.png\")\nplt.show()\n\n\n\n\n\n\n\n\n\nfrom statsmodels.graphics.tsaplots import plot_pacf\n\nos.makedirs(\"figures\", exist_ok=True)\nplt.figure(figsize=(5, 4))\nplot_pacf(df_INMET['RADIACAO_GLOBAL_IMPUTADA'].tail(2000), lags=100, method='ywm')\nplt.title(\"PACF - Global Radiation (Hourly Series)\", fontsize=12)\nplt.grid(True)\nplt.tight_layout()\nplt.savefig(\"figures/pacf_hourly_compact.png\")\nplt.show()\n\n&lt;Figure size 500x400 with 0 Axes&gt;\n\n\n\n\n\n\n\n\n\n\n\n\n3.0.0.3 EDA DIARIA\n\ndf_diario = df_INMET['RADIACAO_GLOBAL_IMPUTADA'].resample('D').mean()\nvariables = ['RADIACAO_GLOBAL_IMPUTADA']\nresumen = {}\n\nfor var in variables:\n    data = df_diario  \n    resumen[var] = {\n        'N_records': len(data),\n        'μ': data.mean(),\n        'σ': data.std(),\n        'y_min': data.min(),\n        'Q1': data.quantile(0.25),\n        'x̄': data.median(),\n        'Q3': data.quantile(0.75),\n        'y_max': data.max(),\n        'Kurtosis': data.kurtosis(),\n        'Skewness': data.skew()\n    }\ndf_resumen = pd.DataFrame(resumen)\ndf_resumen\n\n\n\n\n\n\n\n\nRADIACAO_GLOBAL_IMPUTADA\n\n\n\n\nN_records\n2251.000000\n\n\nμ\n284.327790\n\n\nσ\n142.219504\n\n\ny_min\n0.000000\n\n\nQ1\n187.916667\n\n\nx̄\n263.104167\n\n\nQ3\n369.541667\n\n\ny_max\n799.916667\n\n\nKurtosis\n0.287621\n\n\nSkewness\n0.546791\n\n\n\n\n\n\n\n\nos.makedirs(\"figures\", exist_ok=True)\ninterval_start = \"2022-01-01\"\ninterval_end = \"2022-03-01\"\nfig, ax = plt.subplots(figsize=(14, 5))\nax.plot(df_diario, color='blue')\nax.set_title('Daily Time Series - Global Radiation', fontsize=18)\nax.set_xlabel('Date', fontsize=12)\nax.set_ylabel('Global Radiation', fontsize=12)\nax.grid(True)\nax.axvspan(pd.to_datetime(interval_start), pd.to_datetime(interval_end),\n           color='gray', alpha=0.3, label='Zoom region')\nax_inset = fig.add_axes([0.55, 0.50, 0.3, 0.35])  # [x, y, width, height]\nzoom_data = df_diario.loc[interval_start:interval_end]\nax_inset.plot(zoom_data, color='red')\nax_inset.set_title('Zoom: Jan–Mar 2022', fontsize=10)\nax_inset.set_xticks([])\nax_inset.set_yticks([])\nplt.tight_layout()\nplt.savefig(\"figures/daily_series_with_zoom_highlighted.png\")\nplt.show()\n\n\n\n\n\n\n\n\n\ndescomposicion = seasonal_decompose(df_diario.tail(200), model='additive', period=7)\ndescomposicion.plot()\nplt.suptitle('Descomposición de Radiación Global (ciclo semanal - 7 días)', fontsize=16)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\ndf_INMET['day_of_week'] = df_INMET.index.day_name()\ndesc_por_dia = df_INMET.groupby('day_of_week')['RADIACAO_GLOBAL_IMPUTADA'].describe()\norden_dias = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\ndesc_por_dia = desc_por_dia.loc[orden_dias]\ndesc_por_dia\ndesc_por_dia = df_INMET.groupby('day_of_week')['RADIACAO_GLOBAL_IMPUTADA'].describe()\norden_dias = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\ndesc_por_dia = desc_por_dia.loc[orden_dias]\ndesc_por_dia\n\n\n\n\n\n\n\n\ncount\nmean\nstd\nmin\n25%\n50%\n75%\nmax\n\n\nday_of_week\n\n\n\n\n\n\n\n\n\n\n\n\nMonday\n7704.0\n276.915390\n740.072654\n0.0\n0.0\n0.0\n0.0\n3924.0\n\n\nTuesday\n7728.0\n288.041990\n760.135891\n0.0\n0.0\n0.0\n0.0\n3924.0\n\n\nWednesday\n7728.0\n281.359645\n747.620231\n0.0\n0.0\n0.0\n0.0\n3924.0\n\n\nThursday\n7728.0\n284.264644\n751.770750\n0.0\n0.0\n0.0\n0.0\n3869.0\n\n\nFriday\n7728.0\n285.984170\n756.346878\n0.0\n0.0\n0.0\n0.0\n3924.0\n\n\nSaturday\n7704.0\n285.550299\n753.603337\n0.0\n0.0\n0.0\n0.0\n3924.0\n\n\nSunday\n7704.0\n288.171102\n760.189282\n0.0\n0.0\n0.0\n0.0\n3924.0\n\n\n\n\n\n\n\n\nos.makedirs(\"figures\", exist_ok=True)\naverage_by_day = df_INMET.groupby(df_INMET.index.day_name())['RADIACAO_GLOBAL_IMPUTADA'].mean().reindex(\n    ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n).reset_index()\naverage_by_day.columns = ['Day', 'Average Radiation']\nplt.figure(figsize=(8, 6))\nsns.lineplot(data=average_by_day, x='Day', y='Average Radiation', marker='o')\nplt.title('Average Global Radiation by Day of the Week', fontsize=18)\nplt.xlabel('Day of the Week', fontsize=14)\nplt.ylabel('Global Radiation', fontsize=14)\nplt.grid(True)\nplt.tight_layout()\nplt.savefig(\"figures/Average_Radiation_by_Day.png\", dpi=300)\nplt.show()\n\n\n\n\n\n\n\n\n\nos.makedirs(\"figures\", exist_ok=True)\n\ndaily_series = df_INMET['RADIACAO_GLOBAL_IMPUTADA'].resample('D').mean().dropna()\ndf_daily = daily_series.to_frame(name='RADIACAO_GLOBAL_IMPUTADA')\ndf_daily['Day'] = df_daily.index.day_name()\ndays_order = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\nfig = px.box(\n    df_daily,\n    x='Day',\n    y='RADIACAO_GLOBAL_IMPUTADA',\n    category_orders={'Day': days_order},\n    labels={\n        'Day': 'Day of the Week',\n        'RADIACAO_GLOBAL_IMPUTADA': 'Global Radiation (Imputed)'\n    },\n    title='Distribution of Imputed Global Radiation by Day of the Week'\n)\n\nfig.update_layout(\n    title_font_size=18,\n    xaxis_title_font_size=14,\n    yaxis_title_font_size=14\n)\nfig.write_html(\"figures/Boxplot_GlobalRadiation_ByDay_Plotly.html\")\nfig.show()\n\n                            \n                                            \n\n\n\nos.makedirs(\"figures\", exist_ok=True)\ndaily_series = df_INMET['RADIACAO_GLOBAL_IMPUTADA'].resample('D').mean().dropna()\ndf_daily = daily_series.to_frame(name='RADIACAO_GLOBAL_IMPUTADA')\ndf_daily['Day'] = df_daily.index.day_name()\nplt.figure(figsize=(10, 6))\nsns.boxplot(\n    data=df_daily,\n    x='Day',\n    y='RADIACAO_GLOBAL_IMPUTADA',\n    order=['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\n)\nplt.title('Distribution of Imputed Global Radiation by Day of the Week', fontsize=18)\nplt.xlabel('Day of the Week', fontsize=14)\nplt.ylabel('Global Radiation (Imputed)', fontsize=14)\nplt.grid(True)\nplt.tight_layout()\nplt.savefig(\"figures/Boxplot_GlobalRadiation_ByDay.png\", dpi=300)\nplt.show()\n\n\n\n\n\n\n\n\n\nplt.figure(figsize=(6, 4))\nautocorrelation_plot(daily_series.tail(200))\nplt.title(\"Autocorrelation - Global Radiation\", fontsize=12)\nplt.grid(True)\nplt.tight_layout()\nplt.savefig(\"figures/Autocorrelation_GlobalRadiation_Daily_200days.png\", dpi=300)\nplt.show()\n\n\n\n\n\n\n\n\n\nplt.figure(figsize=(10, 4))\nplot_pacf(daily_series.tail(2000), lags=150, method='ywm')  \nplt.title(\"PACF - Global Radiation (Daily Series)\", fontsize=14)\nplt.grid(True)\nplt.tight_layout()\nplt.savefig(\"figures/PACF_GlobalRadiation_DailySeries.png\", dpi=300)\nplt.show()\n\n&lt;Figure size 1000x400 with 0 Axes&gt;\n\n\n\n\n\n\n\n\n\n\n3.0.0.3.1 EDA MENSUAL\n\ndf_mensual = df_INMET['RADIACAO_GLOBAL_IMPUTADA'].resample('M').mean().to_frame(name='Promedio_Radiacion_Mensual')\nvariables = ['Promedio_Radiacion_Mensual']\nresumen = {}\nfor var in variables:\n    data = df_mensual[var]\n    resumen[var] = {\n        'N_records': len(data),\n        'μ': data.mean(),\n        'σ': data.std(),\n        'y_min': data.min(),\n        'Q1': data.quantile(0.25),\n        'x̄': data.median(),\n        'Q3': data.quantile(0.75),\n        'y_max': data.max(),\n        'Kurtosis': data.kurtosis(),\n        'Skewness': data.skew()\n    }\ndf_resumen = pd.DataFrame(resumen)\ndf_resumen\n\n\n\n\n\n\n\n\nPromedio_Radiacion_Mensual\n\n\n\n\nN_records\n74.000000\n\n\nμ\n284.331526\n\n\nσ\n49.663561\n\n\ny_min\n225.783565\n\n\nQ1\n249.974238\n\n\nx̄\n274.986044\n\n\nQ3\n313.849497\n\n\ny_max\n411.725806\n\n\nKurtosis\n1.182565\n\n\nSkewness\n1.264723\n\n\n\n\n\n\n\n\nplt.figure(figsize=(14, 5))\nplt.plot(df_mensual, color='blue')\nplt.title('Monthly Time Series - Global Radiation', fontsize=18)\nplt.xlabel('Date', fontsize=18)\nplt.ylabel('Radiation (W/m²)', fontsize=18)\nplt.xticks(fontsize=16) \nplt.yticks(fontsize=16)\nplt.grid(True)\nplt.tight_layout()\nplt.savefig(\"figures/Monthly_GlobalRadiation_TimeSeries.png\", dpi=300)\nplt.show()\n\n\n\n\n\n\n\n\n\ndescomposicion = seasonal_decompose(df_mensual, model='additive', period=12)\ndescomposicion.plot()\nplt.suptitle('Decomposition of Global Radiation (Monthly Cycle)', fontsize=16)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\ndf_diario = df_INMET['RADIACAO_GLOBAL_IMPUTADA'].resample('D').mean()\ndf_diario = df_diario.to_frame(name='RADIACAO_GLOBAL_IMPUTADA')\ndf_diario['Mes'] = df_diario.index.month\nagrupado_mes_calendario = df_diario.groupby('Mes')['RADIACAO_GLOBAL_IMPUTADA']\nresumen_mensual_simple = pd.DataFrame({\n    'N_records': agrupado_mes_calendario.count(),\n    'μ': agrupado_mes_calendario.mean(),\n    'σ': agrupado_mes_calendario.std(),\n    'y_min': agrupado_mes_calendario.min(),\n    'Q1': agrupado_mes_calendario.quantile(0.25),\n    'x̄': agrupado_mes_calendario.median(),\n    'Q3': agrupado_mes_calendario.quantile(0.75),\n    'y_max': agrupado_mes_calendario.max(),\n    'Kurtosis': agrupado_mes_calendario.apply(pd.Series.kurtosis),\n    'Skewness': agrupado_mes_calendario.apply(pd.Series.skew)\n})\nresumen_mensual_simple.index = pd.to_datetime(resumen_mensual_simple.index, format='%m').month_name()\nresumen_mensual_simple\n\n\n\n\n\n\n\n\nN_records\nμ\nσ\ny_min\nQ1\nx̄\nQ3\ny_max\nKurtosis\nSkewness\n\n\nMes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nJanuary\n217\n407.477151\n163.626147\n68.500000\n283.104167\n383.895833\n516.208333\n799.916667\n-0.371655\n0.164949\n\n\nFebruary\n198\n317.083649\n133.032529\n53.875000\n235.833333\n304.166667\n392.291667\n659.645833\n0.033322\n0.372261\n\n\nMarch\n186\n234.346550\n127.571404\n3.875000\n154.541667\n225.500000\n298.250000\n610.666667\n1.327689\n0.917040\n\n\nApril\n180\n237.857407\n141.355477\n0.583333\n140.453125\n232.500000\n306.776042\n596.875000\n0.105675\n0.537886\n\n\nMay\n186\n257.869848\n113.049078\n69.791667\n160.177083\n244.722222\n350.583333\n518.916667\n-0.768204\n0.174336\n\n\nJune\n180\n230.266204\n111.890502\n0.000000\n147.541667\n226.770833\n324.916667\n430.125000\n-0.636302\n-0.359935\n\n\nJuly\n186\n252.023746\n137.279431\n27.916667\n168.791667\n217.583333\n357.541667\n630.291667\n0.256444\n0.710706\n\n\nAugust\n186\n277.110215\n101.562718\n61.750000\n210.166667\n274.187500\n344.500000\n494.375000\n-0.488741\n-0.054911\n\n\nSeptember\n180\n274.390278\n129.997583\n40.041667\n181.416667\n258.791667\n339.291667\n579.208333\n-0.158738\n0.444753\n\n\nOctober\n186\n321.683580\n149.988278\n60.333333\n185.083333\n332.604167\n430.125000\n668.291667\n-0.582618\n0.048882\n\n\nNovember\n180\n291.265625\n137.199636\n32.208333\n196.562500\n267.375000\n364.041667\n687.604167\n0.801704\n0.766444\n\n\nDecember\n186\n284.581317\n139.366372\n28.833333\n194.666667\n253.104167\n382.250000\n743.041667\n0.707201\n0.739721\n\n\n\n\n\n\n\n\npromedio_por_mes = df_INMET.groupby(df_INMET.index.month)['RADIACAO_GLOBAL_IMPUTADA'].mean()\npromedio_por_mes.index = pd.to_datetime(promedio_por_mes.index, format='%m').month_name()\npromedio_por_mes = promedio_por_mes.reset_index()\npromedio_por_mes.columns = ['Month', 'Average Radiation']\norden_meses = ['January', 'February', 'March', 'April', 'May', 'June',\n               'July', 'August', 'September', 'October', 'November', 'December']\npromedio_por_mes = promedio_por_mes.set_index('Month').loc[orden_meses].reset_index()\nplt.figure(figsize=(12, 6))\nsns.lineplot(data=promedio_por_mes, x='Month', y='Average Radiation', marker='o')\nplt.title('Average Global Radiation by Month of the Year', fontsize=18)\nplt.xlabel('Month of the Year', fontsize=14)\nplt.ylabel('Global Radiation (Imputed)', fontsize=14)\nplt.xticks(fontsize=13) \nplt.yticks(fontsize=13)\nplt.grid(True)\nplt.tight_layout()\nplt.savefig(\"figures/avg_radiation_by_month.png\", dpi=300)\nplt.show()\n\n\n\n\n\n\n\n\n\ndf_INMET['Month'] = df_INMET.index.month\ndf_INMET['Month'] = pd.to_datetime(df_INMET['Month'], format='%m').dt.month_name()\nmonth_order = ['January', 'February', 'March', 'April', 'May', 'June',\n               'July', 'August', 'September', 'October', 'November', 'December']\n\nos.makedirs(\"figures\", exist_ok=True)\nplt.figure(figsize=(14, 6))\nsns.violinplot(\n    data=df_INMET,\n    x='Month',\n    y='RADIACAO_GLOBAL_IMPUTADA',\n    order=month_order,\n    inner='box'  \n)\nplt.title('Distribution of Global Radiation by Month', fontsize=18)\nplt.xlabel('Month', fontsize=16)\nplt.ylabel('Global Radiation', fontsize=16)\nplt.xticks(fontsize=14) \nplt.yticks(fontsize=14)\nplt.grid(True)\nplt.tight_layout()\nplt.savefig(\"figures/violinplot_radiation_by_month.png\", dpi=300)\nplt.show()\n\n\n\n\n\n\n\n\n\ndf_INMET['Month'] = pd.Categorical(df_INMET['Month'], categories=month_order, ordered=True)\n\nfig = px.violin(\n    df_INMET,\n    x='Month',\n    y='RADIACAO_GLOBAL_IMPUTADA',\n    category_orders={'Month': month_order},\n    box=True,\n    points=False,  \n    title='Distribution of Imputed Global Radiation by Month'\n)\n\nfig.update_layout(\n    title_font_size=18,\n    xaxis_title='Month',\n    yaxis_title='Global Radiation (Imputed)',\n    xaxis_tickangle=45,\n    font=dict(size=12)\n)\nfig.show()\n\n                            \n                                            \n\n\n\nserie_mensual = df_INMET['RADIACAO_GLOBAL_IMPUTADA'].resample('M').mean()\nplt.figure(figsize=(5, 4))\nautocorrelation_plot(serie_mensual)\nplt.title(\"Autocorrelation - Global Radiation (Monthly Series)\", fontsize=12)\nplt.grid(True)\nplt.tight_layout()\nplt.savefig(\"figures/autocorrelation_monthly_series.png\", dpi=300)\nplt.show()\n\n\n\n\n\n\n\n\n\nplt.figure(figsize=(5, 4))\nplot_pacf(serie_mensual, lags=30, method='ywm')\nplt.title(\"PACF - Global Radiation (Monthly Series)\", fontsize=12)\nplt.grid(True)\nplt.tight_layout()\nplt.savefig(\"figures/pacf_monthly_series.png\", dpi=300)\nplt.show()\n\n&lt;Figure size 500x400 with 0 Axes&gt;",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>**ETL**</span>"
    ]
  }
]